package com.prac2;


import com.formdev.flatlaf.intellijthemes.FlatArcIJTheme;
import static com.prac2.Constantes.*;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.util.Arrays;


public class NewJFrame extends javax.swing.JFrame {

    File archivoOrigen = null;
    
    public NewJFrame() {
        initComponents();  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCifrado = new com.prac2.Switch();
        lblCifrarDescifrar = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbModo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtRuta = new javax.swing.JTextField();
        btnBuscarArchivo = new javax.swing.JButton();
        txtLlave = new javax.swing.JTextField();
        txtVector = new javax.swing.JTextField();
        btnProcesar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cifrador por bloques AES");

        btnCifrado.setBackground(new java.awt.Color(51, 255, 255));
        btnCifrado.setForeground(new java.awt.Color(204, 0, 0));
        btnCifrado.setDisabledColor(new java.awt.Color(0, 204, 255));
        btnCifrado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCifradoMouseClicked(evt);
            }
        });

        lblCifrarDescifrar.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        lblCifrarDescifrar.setForeground(new java.awt.Color(0, 51, 0));
        lblCifrarDescifrar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCifrarDescifrar.setText("Descifrar");
        btnCifrado.add(lblCifrarDescifrar);
        lblCifrarDescifrar.setBounds(50, 10, 110, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Modo de operación");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Archivo de entrada");

        cbModo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbModo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ECB (electronic codebook)", "CBC (cipher-block chaining)", "CFB (ciipher feedback)", "OFB (output feedback)" }));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Llave");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Vector de inicialización (C0)");

        txtRuta.setEditable(false);
        txtRuta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnBuscarArchivo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBuscarArchivo.setText("Buscar");
        btnBuscarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarArchivoActionPerformed(evt);
            }
        });

        txtLlave.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtVector.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnProcesar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnProcesar.setText("Procesar");
        btnProcesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcesarActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(51, 153, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("<html>\n<h1>Cifrador AES</h1>\nEste programa le permite cifrar y descifrar archivos  de imagen bmp utilizando el algoritmo AES\n");
        jLabel1.setIconTextGap(8);
        jLabel1.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCifrado, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtRuta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscarArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtLlave, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtVector)
                            .addComponent(cbModo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(30, 30, 30))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnProcesar, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(227, 227, 227))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnCifrado, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbModo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarArchivo)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLlave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(30, 30, 30)
                .addComponent(btnProcesar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarArchivoActionPerformed
        String ruta = "";
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(fileChooser);
        try {
            ruta = fileChooser.getSelectedFile().getAbsolutePath(); 
            archivoOrigen = new File(ruta);
            txtRuta.setText(ruta);
        } catch (NullPointerException e) {
            //JOptionPane.showMessageDialog(null, "No se ha elegido ningun archivo",
            //        "¡Oh no!", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(null, "No se ha podido abrir el archivo",
                    "¡Oh no!", JOptionPane.ERROR_MESSAGE);
        }       
    }//GEN-LAST:event_btnBuscarArchivoActionPerformed

    private void btnProcesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcesarActionPerformed
        if (txtLlave.getText().length() != 16){
            JOptionPane.showMessageDialog(null, "La llave en AES debe de ser de 16 bytes",
                    "¡Oh no!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (archivoOrigen == null){
            System.out.println("No se ha seleccionado ningun archivo");
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ningun archivo",
                    "¡Oh no!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (btnCifrado.isOnOff()== false){ 
            cifrar();
        }
        else {  
            descifrar();
        }
    }//GEN-LAST:event_btnProcesarActionPerformed

    private void btnCifradoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCifradoMouseClicked
        if (btnCifrado.isOnOff() == false ){
            lblCifrarDescifrar.setText("Cifrar");
            btnProcesar.setText("Cifrar");
        }
        else{
            lblCifrarDescifrar.setText("Descifrar");
            btnProcesar.setText("Descifrar");        
        }
    }//GEN-LAST:event_btnCifradoMouseClicked
    
    
    public void cifrar(){
        String extArchivo = "";
        byte[] iv = null;
        String llave = txtLlave.getText();   
            
        try {
            byte[] fileContent = Files.readAllBytes(archivoOrigen.toPath());
            CifradorAES cipher = new CifradorAES();
            byte[] datosCifrados = null;

            
            switch (cbModo.getSelectedIndex()){
                case 0:
                    datosCifrados = cipher.cifrarBytes(ModoOperar.ECB, 
                        Arrays.copyOfRange(fileContent, 54, fileContent.length), llave, iv);
                    extArchivo = "_eECB";
                    break;
                case 1:
                    if (txtVector.getText().length() != 16) {
                        JOptionPane.showMessageDialog(null, "El vector en AES debe de ser de 16 bytes",
                                "¡Oh no!", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    iv = txtVector.getText().getBytes();

                    datosCifrados = cipher.cifrarBytes(ModoOperar.CBC,
                            Arrays.copyOfRange(fileContent, 54, fileContent.length), llave, iv); 
                    extArchivo = "_eCBC";
                    break;
                case 2:
                    
                    break;           
                case 3:
                    
                    break; 
                case 4:
                    
                    break;                    
            }

            
            byte[] datosFinal = new byte[54 + datosCifrados.length];
            byte[] header =  Arrays.copyOfRange(fileContent, 0, 54);

            System.arraycopy( header, 0, datosFinal, 0, header.length );
            System.arraycopy( datosCifrados, 0, datosFinal,  header.length, datosCifrados.length );
            guardarArchivo( datosFinal , extArchivo);

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Algo salió mal al cifrar",
                    "¡Oh no!", JOptionPane.ERROR_MESSAGE);              
        }        
        
    }
    public void descifrar(){
        String extArchivo = "";
        byte[] iv = null;
        String llave = txtLlave.getText();     
        try {
            byte[] fileContent = Files.readAllBytes(archivoOrigen.toPath());
            CifradorAES cipher = new CifradorAES();
            byte[] datosDescifrados = null;

            
            switch (cbModo.getSelectedIndex()){
                case 0:
                    datosDescifrados = cipher.descifrarBytes(ModoOperar.ECB, 
                        Arrays.copyOfRange(fileContent, 54, fileContent.length), llave, iv);
                    extArchivo = "_dECB";
                    break;
                case 1:
                    if (txtVector.getText().length() != 16) {
                        JOptionPane.showMessageDialog(null, "El vector en AES debe de ser de 16 bytes",
                                "¡Oh no!", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    iv = txtVector.getText().getBytes();

                    datosDescifrados = cipher.descifrarBytes(ModoOperar.CBC,
                            Arrays.copyOfRange(fileContent, 54, fileContent.length), llave, iv);
                    extArchivo = "_dCBC";            
                    break;
                case 2:
                    
                    break;           
                case 3:
                    
                    break; 
                case 4:
                    
                    break;                    
            }

            
            byte[] datosFinal = new byte[54 + datosDescifrados.length];
            byte[] header =  Arrays.copyOfRange(fileContent, 0, 54);

            System.arraycopy( header, 0, datosFinal, 0, header.length );
            System.arraycopy( datosDescifrados, 0, datosFinal,  header.length, datosDescifrados.length );
            guardarArchivo( datosFinal , extArchivo);

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Algo salió mal al descifrar",
                    "¡Oh no!", JOptionPane.ERROR_MESSAGE);              
        }        
    }
    
    
    public void guardarArchivo(byte[] datos, String extension){
        try {
            String ruta = archivoOrigen.getParent();
            System.out.println(ruta);
            String nombreOrigen[] = archivoOrigen.getName().split("\\.(?=[^\\.]+$)");
            
            
            File archivoDestino = new File( ruta + "//" + nombreOrigen[0] + extension + "." + nombreOrigen[1] );

            if (archivoDestino.createNewFile()) {
                FileOutputStream os = new FileOutputStream(archivoDestino);
                os.write(datos);
                os.close();
            } 
            
            JOptionPane.showMessageDialog(null, "Se han guardado los datos en " + archivoDestino.getAbsolutePath(),
                    "¡Enhorabuena!", JOptionPane.INFORMATION_MESSAGE); 
        } catch (IOException e) {
            System.out.println("No se pudo crear el archivo");
            JOptionPane.showMessageDialog(null, "No se pudo guardar el mensaje, vuelve a intentarlo", "¡Oh no!",
                    JOptionPane.ERROR_MESSAGE);               
            e.printStackTrace();
        }          
    
    }    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
         //FlatLightLaf.setup();
        FlatArcIJTheme.install();
        //UIManager.put( "Button.arc", 999 );
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        */
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarArchivo;
    private com.prac2.Switch btnCifrado;
    private javax.swing.JButton btnProcesar;
    private javax.swing.JComboBox<String> cbModo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblCifrarDescifrar;
    private javax.swing.JTextField txtLlave;
    private javax.swing.JTextField txtRuta;
    private javax.swing.JTextField txtVector;
    // End of variables declaration//GEN-END:variables
}
